name: Build, test, and publish Docker Images

env:
  {%- raw %}
  OWNER: ${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.event.repository.name }}
  {%- endraw %}

# For more details on events that trigger workflows see:
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  schedule:
    # Weekly, at 07:00 on Monday UTC time
    - cron: "0 7 * * 1"
  pull_request:
    paths:
      - ".github/workflows/docker.yml"
      - "image/**"
      - "tests/**"
      - "requirements-dev.txt"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/docker.yml"
      - "image/**"
      - "tests/**"
      - "requirements-dev.txt"
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  {%- raw %}
  group: ${{ github.workflow }}-${{ github.ref }}
  {%- endraw %}
  cancel-in-progress: true

jobs:
  build-test-publish-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repo ‚ö°Ô∏è
        uses: actions/checkout@v4

      - name: Set Up Python üêç
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Dev Dependencies üì¶
        run: |
          pip install --upgrade pip
          pip install --upgrade -r requirements-dev.txt

      - name: Get commit sha, this will be used as a tag later on üè∑
        shell: bash
        run: |
          echo "sha12=$(echo ${GITHUB_SHA} | cut -c1-12)" >> $GITHUB_OUTPUT
        id: get_sha

      - name: Build image üõ†
        {%- raw %}
        run: docker build --rm --force-rm --tag ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest --tag ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{steps.get_sha.outputs.sha12}} image/
        {%- endraw %}
        env:
          DOCKER_BUILDKIT: 1
          # Full logs for CI build
          BUILDKIT_PROGRESS: plain

      - name: Run tests ‚úÖ
        run: python3 -m pytest tests

      - name: Login to Docker Hub üîê
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
        {%- raw %}
          username: ${{ env.OWNER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        {%- endraw %}

      - name: Push Image to Docker Hub üì§
        if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
        {%- raw %}
        run: docker push --all-tags ${{ env.OWNER }}/${{ env.IMAGE_NAME }}
        {%- endraw %}
